---
layout: post
title: "lotto : 로또 번호와 유저의 결과값 비교 asynchronous"
date: 2024-02-18 13:16:03 +0900
categories: jekyll update
---

- 로또 번호를 1초에 1개씩 화면에 띄워주고 , 사용자 입력값과 비교해 결과를 출력하는 코드를 구현중이었다.<br>
  setTimeout을 사용했기 때문에 JavaScript는 비동기 처리로 코드를 실행하게 됐고, 이 곳에서 문제가 발생했다.<br>
  원하지 않았던 코드의 흐름이 발생하게 됨.<br> 

- 예상치 못했던 부분에서의 문제발생. 알고 있다고 생각했던 비동기는 뻥.이었음<br>
  키워드만 알고 있었다는 생각이 든다. 작은 프로젝트에서 다양하게 Promise와 async await을 적용해 볼 수 있는 기회였다. 다시 처음 공부한다는 생각으로 공부하자. 맨땅에 해딩하는 것보다 두번째 공부하는 건 덜 아플테니 많이 배우자.<br>

- 오늘 코드를 짜면서 문제 해결을 위한 질문들이 많이 떠올랐다. 내일은 이 질문에 대한 답을 찾을예정
  - 비동기 처리는 무엇인가?
  - async await 언제 쓰는가.
  - Promise언제 쓰는가.
  - 내가 이 두 개념을 정확히 알고 있는가?
  - promise객체를 생성한 이유는 무엇?
  - resolve와 reject를 반환해서 setTimeout에서 resolve를 실행하는 이유는 무엇?
  - resolve를 setTimeout 내부와 외부에서 실행하는 것은 어떤 차이가 있는가?
  - drawBall함수를 async로 만들고 그 결과값을 await으로 받아 사용하는게 맞는건지?
    여기는 변수에 넣어 사용하는 게 아니라서 화면에 ball이 그려지고 그 다음으로 넘어가는 게 맞는건지 확인하면 됨.
  - user와 lotto추첨의 비교는 앞서 promise객체의 resolve결과가 나오고 나서 실행되게 조정한 게 맞는건지? ⇒ setTimeout안에서 resolve()를 실행했기 때문이 맞는건가?
  
  <br>
  <br>
  <br>

-------------------------------

- <a href='https://github.com/J-SoYoung/Collection-JavaScript-toyProjects/issues/69#issue-2140748100' target="_blank">github issue : setTimeout 시간으로 비동기 처리하는거 말고 어떤 방법이 있을까?</a>
- <a href='https://github.com/J-SoYoung/Collection-JavaScript-toyProjects/commit/d27d8a0a317ec27aa842018217d80ed0f3bcee2b' target='_blank'>  2024.02.18 TIL - 노션으로 이동</a>
- <a href='https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC-Promise#promise.reject' targer='_blank'>비동기 관련 블로그 글 참고</a>
