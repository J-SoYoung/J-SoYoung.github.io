---
layout: post
title: "node-bird / redux-saga + reducer 연결"
date: 2024-03-21 13:16:03 +0900
categories: jekyll update
---

<b>CHECK</b>

- zerocho lecture 'node-bird' : React & Next.js
  <br>

---

<br>

<b> study, think </b>

- **saga와 thunk의 차이**, 둘은 비동기적 데이터 관리를 할 수 있다. 하지만 saga에 더 많은 기능이 있다 ( fork, call, take, throttle .. 등등)
- **saga와 generator의 관계** ( +deepdive ), generator의 기능을 통해서 next()를 활용해 무한동작의 개념과 이벤트 리스너터럼 동작이 가능하다.
- data의 상태관리로 => redux를 사용하고 추가적인 비동기 관리 saga를 사용한다. 이때 동작하는 순서는 redux, action실행 -> saga 동작 , sucess /fail 호출 -> 내가 짜기 나름이지만... 쨌든 그런 방식으로 동작한다. **애매하게 알 때는 console로 정확한 코드의 흐름을 확인해봐야 한다.**
- **useState를 사용해서 input에 있는 데이터를 reset할 때, reset하는 함수?의 위치는 어디가 적당한가?** 데이터를 dispatch하고 난 다음일까? ㄴㄴ. dispatch의 결과가 성공인지 실패인지 알 수 없기 때문에, 실패인 경우를 대비해 useEffect의 dispatch성공의 상태를 넣어두고, 그 상태일때 reset을 실행 하도록 해야함!!!!! ( ..거기까지 생각못햇음.. )
  <br>
- 각 데이터의 상태를 dispatch에 넣어주는 것

---

<br>
- <a href='https://www.notion.so/fun-blog/node-bird-saga-pattern-f7f4bdaf9c264465bdea0f0ee0fa05ec' target="_blank">2024.03.21 node-bird TIL의 자세히보기(notion)</a>
